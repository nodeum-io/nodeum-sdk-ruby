variables:
  GITHUB_OWNER: nodeum-io
  GITHUB_REPOSITORY: nodeum-sdk-ruby

Generate SDK:
  image: $CI_REGISTRY/nodeum/web/swagger:$SWAGGER_REF
  stage: build
  rules:
    - if: $SWAGGER_REF && $PACKAGE_VERSION
  script:
    - >-
      docker-entrypoint.sh generate
      -i /swagger/api.yml
      --git-user-id=$GITHUB_OWNER
      --git-repo-id=$GITHUB_REPOSITORY
      -p sortParamsByRequiredFlag
      -p gemName=$PACKAGE_NAME
      -p gemVersion=$PACKAGE_VERSION
      -p moduleName=Nodeum
      -g ruby
      -o $CI_PROJECT_DIR
  artifacts:
    paths:
      - .openapi-generator/
      - docs/
      - lib/
      - spec/
      - $PACKAGE_NAME.gemspec
      - .gitignore
      - .rspec
      - .rubocop.yml
      - .travis.yml
      - Gemfile
      - git_push.sh
      - Rakefile
      - README.md

Commit SDK:
  image: docker:git
  stage: publish
  rules:
    - if: $SWAGGER_REF && $PACKAGE_VERSION
  needs:
    - job: Generate SDK
      artifacts: true
  before_script:
    - eval $(ssh-agent -s)
    - echo "$GIT_SSH_PRIV_KEY" | ssh-add -
    - git config --global user.email "$GITLAB_USER_EMAIL"
    - git config --global user.name "$GITLAB_USER_NAME"
    - git remote set-url --add --push origin git@$CI_SERVER_HOST:$CI_PROJECT_PATH.git
    - mkdir -p ~/.ssh
    - ssh-keyscan $CI_SERVER_HOST >> ~/.ssh/known_hosts
  script:
    - git add .
    - git commit -m "Generate SDK from $SWAGGER_REF for $PACKAGE_VERSION" || true
    - git push -o ci.skip origin HEAD:$CI_COMMIT_REF_NAME

Publish SDK:
  image: ruby:2.7-alpine
  stage: publish
  rules:
    - if: $SWAGGER_REF && $PACKAGE_VERSION
  needs:
    - job: Generate SDK
      artifacts: true
  before_script:
    - >-
      ---
      :rubygems_api_key: $GEM_API_TOKEN" >> $HOME/.gem/credentials
    - gem build $PACKAGE_NAME
  script:
    - gem push $PACKAGE_NAME-$PACKAGE_VERSION.gem
