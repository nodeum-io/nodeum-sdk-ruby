=begin
#Nodeum API

## About  This document describes the Nodeum API version 2:  If you are looking for any information about the product itself, reach the product website https://www.nodeum.io. You can also contact us at this email address : info@nodeum.io  # Filter parameters When browsing a list of items, multiple filter parameters may be applied. Some operators can be added to the value as a prefix:  - `=` value is equal. Default operator, may be omitted  - `!=` value is different  - `>` greater than  - `>=` greater than or equal  - `<` lower than  - `>=` lower than or equal  - `><` included in list, items should be separated by `|`  - `!><` not included in list, items should be separated by `|`  - `~` pattern matching, may include `%` (any characters) and `_` (one character)  - `!~` pattern not matching, may include `%` (any characters) and `_` (one character)  

The version of the OpenAPI document: 2.1.0

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 4.3.0

=end

require 'spec_helper'
require 'json'

# Unit tests for Nodeum::TaskExecutionsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'TaskExecutionsApi' do
  before do
    # run before each test
    @api_instance = Nodeum::TaskExecutionsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of TaskExecutionsApi' do
    it 'should create an instance of TaskExecutionsApi' do
      expect(@api_instance).to be_instance_of(Nodeum::TaskExecutionsApi)
    end
  end

  # unit tests for index_task_executions
  # Lists all task executions.
  # **API Key Scope**: task_executions / index
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The number of items to display for pagination.
  # @option opts [Integer] :offset The number of items to skip for pagination.
  # @option opts [Array<String>] :sort_by Sort results by attribute.  Can sort on multiple attributes, separated by &#x60;|&#x60;. Order direction can be suffixing the attribute by either &#x60;:asc&#x60; (default) or &#x60;:desc&#x60;.
  # @option opts [Boolean] :complete_list If &#x60;false&#x60;, only includes the last correct execution of a task.
  # @option opts [String] :id Filter on id
  # @option opts [String] :task_id Filter on task id
  # @option opts [String] :name Filter on name
  # @option opts [String] :workflow_type Filter on task workflow type
  # @option opts [String] :workflow_action Filter on task workflow action
  # @option opts [String] :source_type Filter on task source type
  # @option opts [String] :destination_type Filter on task destination type
  # @option opts [String] :status Filter on status
  # @option opts [String] :log_time Filter on log time
  # @option opts [String] :job_started Filter on job started
  # @option opts [String] :job_finished Filter on job finished
  # @option opts [String] :creation_date Filter on creation date
  # @option opts [String] :modification_date Filter on modification date
  # @option opts [String] :to_process_size Filter on to process size
  # @option opts [String] :processed_size Filter on processed size
  # @option opts [String] :to_process_files Filter on to process files
  # @option opts [String] :processed_files Filter on processed files
  # @option opts [String] :finalized_files Filter on finalized files
  # @option opts [String] :estimation_time Filter on estimation time
  # @option opts [String] :bandwidth Filter on bandwidth
  # @return [TaskExecutionCollection]
  describe 'index_task_executions test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for index_task_executions_by_task
  # Lists all task executions.
  # **API Key Scope**: task_executions / index
  # @param [Hash] opts the optional parameters
  # @option opts [String] :task_id Filter on task id
  # @option opts [Integer] :limit The number of items to display for pagination.
  # @option opts [Integer] :offset The number of items to skip for pagination.
  # @option opts [Array<String>] :sort_by Sort results by attribute.  Can sort on multiple attributes, separated by &#x60;|&#x60;. Order direction can be suffixing the attribute by either &#x60;:asc&#x60; (default) or &#x60;:desc&#x60;.
  # @option opts [String] :id Filter on id
  # @option opts [String] :name Filter on name
  # @option opts [String] :workflow_type Filter on task workflow type
  # @option opts [String] :workflow_action Filter on task workflow action
  # @option opts [String] :source_type Filter on task source type
  # @option opts [String] :destination_type Filter on task destination type
  # @option opts [String] :status Filter on status
  # @option opts [String] :log_time Filter on log time
  # @option opts [String] :job_started Filter on job started
  # @option opts [String] :job_finished Filter on job finished
  # @option opts [String] :to_process_size Filter on to process size
  # @option opts [String] :processed_size Filter on processed size
  # @option opts [String] :to_process_files Filter on to process files
  # @option opts [String] :processed_files Filter on processed files
  # @option opts [String] :finalized_files Filter on finalized files
  # @option opts [String] :estimation_time Filter on estimation time
  # @option opts [String] :bandwidth Filter on bandwidth
  # @return [TaskExecutionCollection]
  describe 'index_task_executions_by_task test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for show_task_execution
  # Displays a specific task execution.
  # **API Key Scope**: task_executions / show
  # @param task_execution_id Numeric ID of task execution.
  # @param [Hash] opts the optional parameters
  # @return [TaskExecution]
  describe 'show_task_execution test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for show_task_execution_by_task
  # Displays a specific task execution.
  # **API Key Scope**: task_executions / show
  # @param task_id Numeric ID or name of task. Task names are not unique, it&#39;s recommanded to use numeric ID.
  # @param task_execution_id Numeric ID of task execution.
  # @param [Hash] opts the optional parameters
  # @return [TaskExecution]
  describe 'show_task_execution_by_task test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
