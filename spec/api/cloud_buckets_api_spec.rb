=begin
#Nodeum API

## About  This document describes the Nodeum API version 2:  If you are looking for any information about the product itself, reach the product website https://www.nodeum.io. You can also contact us at this email address : info@nodeum.io  # Filter parameters When browsing a list of items, multiple filter parameters may be applied. Some operators can be added to the value as a prefix:  - `=` value is equal. Default operator, may be omitted  - `!=` value is different  - `>` greater than  - `>=` greater than or equal  - `<` lower than  - `>=` lower than or equal  - `><` included in list, items should be separated by `|`  - `!><` not included in list, items should be separated by `|`  - `~` pattern matching, may include `%` (any characters) and `_` (one character)  - `!~` pattern not matching, may include `%` (any characters) and `_` (one character)  

The version of the OpenAPI document: 2.1.0

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 4.3.0

=end

require 'spec_helper'
require 'json'

# Unit tests for Nodeum::CloudBucketsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'CloudBucketsApi' do
  before do
    # run before each test
    @api_instance = Nodeum::CloudBucketsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of CloudBucketsApi' do
    it 'should create an instance of CloudBucketsApi' do
      expect(@api_instance).to be_instance_of(Nodeum::CloudBucketsApi)
    end
  end

  # unit tests for index_cloud_buckets
  # Lists all cloud buckets.
  # **API Key Scope**: cloud_buckets / index
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The number of items to display for pagination.
  # @option opts [Integer] :offset The number of items to skip for pagination.
  # @option opts [Array<String>] :sort_by Sort results by attribute.  Can sort on multiple attributes, separated by &#x60;|&#x60;. Order direction can be suffixing the attribute by either &#x60;:asc&#x60; (default) or &#x60;:desc&#x60;.
  # @option opts [String] :id Filter on id
  # @option opts [String] :cloud_connector_id Filter on cloud connector id
  # @option opts [String] :pool_id Filter on a pool id
  # @option opts [String] :name Filter on name
  # @option opts [String] :location Filter on location
  # @option opts [String] :price Filter on price
  # @return [CloudBucketCollection]
  describe 'index_cloud_buckets test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for index_cloud_buckets_by_cloud_connector
  # Lists all cloud buckets.
  # **API Key Scope**: cloud_buckets / index
  # @param cloud_connector_id Numeric ID or name of cloud connector.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The number of items to display for pagination.
  # @option opts [Integer] :offset The number of items to skip for pagination.
  # @option opts [Array<String>] :sort_by Sort results by attribute.  Can sort on multiple attributes, separated by &#x60;|&#x60;. Order direction can be suffixing the attribute by either &#x60;:asc&#x60; (default) or &#x60;:desc&#x60;.
  # @option opts [String] :id Filter on id
  # @option opts [String] :pool_id Filter on a pool id
  # @option opts [String] :name Filter on name
  # @option opts [String] :location Filter on location
  # @option opts [String] :price Filter on price
  # @return [CloudBucketCollection]
  describe 'index_cloud_buckets_by_cloud_connector test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for index_cloud_buckets_by_pool
  # Lists all cloud buckets from pool.
  # **API Key Scope**: cloud_buckets / index
  # @param pool_id Numeric ID, or name of pool.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The number of items to display for pagination.
  # @option opts [Integer] :offset The number of items to skip for pagination.
  # @option opts [Array<String>] :sort_by Sort results by attribute.  Can sort on multiple attributes, separated by &#x60;|&#x60;. Order direction can be suffixing the attribute by either &#x60;:asc&#x60; (default) or &#x60;:desc&#x60;.
  # @option opts [String] :id Filter on id
  # @option opts [String] :cloud_connector_id Filter on cloud connector id
  # @option opts [String] :name Filter on name
  # @option opts [String] :location Filter on location
  # @option opts [String] :price Filter on price
  # @return [CloudBucketCollection]
  describe 'index_cloud_buckets_by_pool test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for mount_status_cloud_bucket
  # Get mount status of Cloud bucket.
  # **API Key Scope**: cloud_buckets / mount_status
  # @param cloud_bucket_id Numeric ID or name of cloud bucket.
  # @param [Hash] opts the optional parameters
  # @return [MountStatus]
  describe 'mount_status_cloud_bucket test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for mount_status_cloud_bucket_by_cloud_connector
  # Get mount status of Cloud bucket.
  # **API Key Scope**: cloud_buckets / mount_status
  # @param cloud_connector_id Numeric ID or name of cloud connector.
  # @param cloud_bucket_id Numeric ID or name of cloud bucket.
  # @param [Hash] opts the optional parameters
  # @return [MountStatus]
  describe 'mount_status_cloud_bucket_by_cloud_connector test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for mount_status_cloud_bucket_by_pool
  # Get mount status of Cloud bucket.
  # **API Key Scope**: cloud_buckets / mount_status
  # @param pool_id Numeric ID, or name of pool.
  # @param cloud_bucket_id Numeric ID or name of cloud bucket.
  # @param [Hash] opts the optional parameters
  # @return [MountStatus]
  describe 'mount_status_cloud_bucket_by_pool test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for show_cloud_bucket
  # Displays a specific cloud bucket.
  # **API Key Scope**: cloud_buckets / show
  # @param cloud_bucket_id Numeric ID or name of cloud bucket.
  # @param [Hash] opts the optional parameters
  # @return [CloudBucket]
  describe 'show_cloud_bucket test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for show_cloud_bucket_by_cloud_connector
  # Displays a specific cloud bucket.
  # **API Key Scope**: cloud_buckets / show
  # @param cloud_connector_id Numeric ID or name of cloud connector.
  # @param cloud_bucket_id Numeric ID or name of cloud bucket.
  # @param [Hash] opts the optional parameters
  # @return [CloudBucket]
  describe 'show_cloud_bucket_by_cloud_connector test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for show_cloud_bucket_by_pool
  # Displays a specific cloud bucket.
  # **API Key Scope**: cloud_buckets / show
  # @param pool_id Numeric ID, or name of pool.
  # @param cloud_bucket_id Numeric ID or name of cloud bucket.
  # @param [Hash] opts the optional parameters
  # @return [CloudBucket]
  describe 'show_cloud_bucket_by_pool test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for sync_cloud_buckets
  # Synchronize internal cloud buckets with their remote equivalent.
  # **API Key Scope**: cloud_buckets / sync
  # @param cloud_connector_id Numeric ID or name of cloud connector.
  # @param [Hash] opts the optional parameters
  # @return [ActiveJobStatus]
  describe 'sync_cloud_buckets test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for sync_result_cloud_buckets
  # Check result of cloud connector sync job.
  # **API Key Scope**: cloud_buckets / sync
  # @param cloud_connector_id Numeric ID or name of cloud connector.
  # @param job_id ID of active job
  # @param [Hash] opts the optional parameters
  # @return [CloudBucketSimpleCollection]
  describe 'sync_result_cloud_buckets test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_cloud_bucket
  # Updates a specific cloud bucket.
  # **API Key Scope**: cloud_buckets / update
  # @param cloud_bucket_id Numeric ID or name of cloud bucket.
  # @param cloud_bucket_body 
  # @param [Hash] opts the optional parameters
  # @return [CloudBucket]
  describe 'update_cloud_bucket test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_cloud_bucket_by_cloud_connector
  # Updates a specific cloud bucket.
  # **API Key Scope**: cloud_buckets / update
  # @param cloud_connector_id Numeric ID or name of cloud connector.
  # @param cloud_bucket_id Numeric ID or name of cloud bucket.
  # @param cloud_bucket_body 
  # @param [Hash] opts the optional parameters
  # @return [CloudBucket]
  describe 'update_cloud_bucket_by_cloud_connector test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_cloud_bucket_by_pool
  # Updates a specific cloud bucket.
  # **API Key Scope**: cloud_buckets / update
  # @param pool_id Numeric ID, or name of pool.
  # @param cloud_bucket_id Numeric ID or name of cloud bucket.
  # @param cloud_bucket_body 
  # @param [Hash] opts the optional parameters
  # @return [CloudBucket]
  describe 'update_cloud_bucket_by_pool test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
