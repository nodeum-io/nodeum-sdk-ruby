=begin
#Nodeum API

## About  This document describes the Nodeum API version 2:  If you are looking for any information about the product itself, reach the product website https://www.nodeum.io. You can also contact us at this email address : info@nodeum.io  # Filter parameters When browsing a list of items, multiple filter parameters may be applied. Some operators can be added to the value as a prefix:  - `=` value is equal. Default operator, may be omitted  - `!=` value is different  - `>` greater than  - `>=` greater than or equal  - `<` lower than  - `>=` lower than or equal  - `><` included in list, items should be separated by `|`  - `!><` not included in list, items should be separated by `|`  - `~` pattern matching, may include `%` (any characters) and `_` (one character)  - `!~` pattern not matching, may include `%` (any characters) and `_` (one character)  

The version of the OpenAPI document: 2.1.0

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 4.3.0

=end

require 'spec_helper'
require 'json'

# Unit tests for Nodeum::ContainersApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'ContainersApi' do
  before do
    # run before each test
    @api_instance = Nodeum::ContainersApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ContainersApi' do
    it 'should create an instance of ContainersApi' do
      expect(@api_instance).to be_instance_of(Nodeum::ContainersApi)
    end
  end

  # unit tests for create_container
  # Creates a new container.
  # It **does not** yet create the file structure and configure the samba connection. Use API v1 instead.  **API Key Scope**: containers / create
  # @param container_body 
  # @param [Hash] opts the optional parameters
  # @return [Container]
  describe 'create_container test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_container_privilege
  # Creates a new privilege on the container.
  # **API Key Scope**: container_privileges / create
  # @param container_id Numeric ID or name of container.
  # @param container_privilege_body 
  # @param [Hash] opts the optional parameters
  # @return [ContainerPrivilege]
  describe 'create_container_privilege test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for destroy_container
  # Destroys a specific container.
  # **API Key Scope**: containers / destroy
  # @param container_id Numeric ID or name of container.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'destroy_container test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for destroy_container_privilege
  # Destroys a specific privilege.
  # **API Key Scope**: container_privileges / destroy
  # @param container_id Numeric ID or name of container.
  # @param container_privilege_id Numeric ID of container privilege.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'destroy_container_privilege test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for index_container_privileges
  # Lists all privilege on the container.
  # **API Key Scope**: container_privileges / index
  # @param container_id Numeric ID or name of container.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The number of items to display for pagination.
  # @option opts [Integer] :offset The number of items to skip for pagination.
  # @option opts [Array<String>] :sort_by Sort results by attribute.  Can sort on multiple attributes, separated by &#x60;|&#x60;. Order direction can be suffixing the attribute by either &#x60;:asc&#x60; (default) or &#x60;:desc&#x60;.
  # @option opts [String] :id Filter on id
  # @option opts [String] :name Filter on name
  # @option opts [String] :privilege Filter on privilege
  # @option opts [String] :type Filter on type
  # @return [ContainerPrivilegeCollection]
  describe 'index_container_privileges test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for index_containers
  # Lists all containers.
  # **API Key Scope**: containers / index
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The number of items to display for pagination.
  # @option opts [Integer] :offset The number of items to skip for pagination.
  # @option opts [Array<String>] :sort_by Sort results by attribute.  Can sort on multiple attributes, separated by &#x60;|&#x60;. Order direction can be suffixing the attribute by either &#x60;:asc&#x60; (default) or &#x60;:desc&#x60;.
  # @option opts [String] :id Filter on id
  # @option opts [String] :name Filter on name
  # @option opts [String] :comment Filter on comment
  # @option opts [String] :quota_total_size Filter on quota total size
  # @option opts [String] :quota_on_cache Filter on quota on cache
  # @option opts [String] :stat_total_files Filter on stat total files
  # @option opts [String] :stat_total_size Filter on stat total size
  # @option opts [String] :stat_size_on_cache Filter on stat size on cache
  # @option opts [String] :guest_right Filter on guest right
  # @option opts [String] :last_update Filter on last update
  # @return [ContainerCollection]
  describe 'index_containers test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for show_container
  # Displays a specific container.
  # **API Key Scope**: containers / show
  # @param container_id Numeric ID or name of container.
  # @param [Hash] opts the optional parameters
  # @return [Container]
  describe 'show_container test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for show_container_privilege
  # Displays a specific privilege.
  # **API Key Scope**: container_privileges / show
  # @param container_id Numeric ID or name of container.
  # @param container_privilege_id Numeric ID of container privilege.
  # @param [Hash] opts the optional parameters
  # @return [ContainerPrivilege]
  describe 'show_container_privilege test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_container
  # Updates a specific container.
  # It **does not** yet create the file structure and configure the samba connection. Use API v1 instead.  **API Key Scope**: containers / update
  # @param container_id Numeric ID or name of container.
  # @param container_body 
  # @param [Hash] opts the optional parameters
  # @return [Container]
  describe 'update_container test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_container_privilege
  # Updates a specific privilege.
  # **API Key Scope**: container_privileges / update
  # @param container_id Numeric ID or name of container.
  # @param container_privilege_id Numeric ID of container privilege.
  # @param container_privilege_body 
  # @param [Hash] opts the optional parameters
  # @return [ContainerPrivilege]
  describe 'update_container_privilege test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
