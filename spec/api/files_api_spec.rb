=begin
#Nodeum API

## About  This document describes the Nodeum API version 2:  If you are looking for any information about the product itself, reach the product website https://www.nodeum.io. You can also contact us at this email address : info@nodeum.io  # Filter parameters When browsing a list of items, multiple filter parameters may be applied. Some operators can be added to the value as a prefix:  - `=` value is equal. Default operator, may be omitted  - `!=` value is different  - `>` greater than  - `>=` greater than or equal  - `<` lower than  - `>=` lower than or equal  - `><` included in list, items should be separated by `|`  - `!><` not included in list, items should be separated by `|`  - `~` pattern matching, may include `%` (any characters) and `_` (one character)  - `!~` pattern not matching, may include `%` (any characters) and `_` (one character)  

The version of the OpenAPI document: 2.1.0

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 4.3.0

=end

require 'spec_helper'
require 'json'

# Unit tests for Nodeum::FilesApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'FilesApi' do
  before do
    # run before each test
    @api_instance = Nodeum::FilesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of FilesApi' do
    it 'should create an instance of FilesApi' do
      expect(@api_instance).to be_instance_of(Nodeum::FilesApi)
    end
  end

  # unit tests for files_children
  # Lists files under a specific folder.
  # **API Key Scope**: files / index
  # @param file_parent_id Numeric ID of parent folder.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The number of items to display for pagination.
  # @option opts [Integer] :offset The number of items to skip for pagination.
  # @option opts [String] :file_id Filter on file id
  # @option opts [String] :name Filter on name
  # @option opts [String] :type Filter on type
  # @option opts [String] :permission Filter on permission
  # @option opts [String] :size Filter on size
  # @option opts [String] :change_date Filter on change date
  # @option opts [String] :modification_date Filter on modification date
  # @option opts [String] :access_date Filter on access date
  # @option opts [String] :gid Filter on gid
  # @option opts [String] :uid Filter on uid
  # @return [NodeumFileCollection]
  describe 'files_children test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for files_children_by_container
  # Lists files under a specific folder.
  # **API Key Scope**: files / index
  # @param container_id Numeric ID or name of container.
  # @param file_parent_id Numeric ID of parent folder.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The number of items to display for pagination.
  # @option opts [Integer] :offset The number of items to skip for pagination.
  # @option opts [String] :file_id Filter on file id
  # @option opts [String] :name Filter on name
  # @option opts [String] :type Filter on type
  # @option opts [String] :permission Filter on permission
  # @option opts [String] :size Filter on size
  # @option opts [String] :change_date Filter on change date
  # @option opts [String] :modification_date Filter on modification date
  # @option opts [String] :access_date Filter on access date
  # @option opts [String] :gid Filter on gid
  # @option opts [String] :uid Filter on uid
  # @return [NodeumFileCollection]
  describe 'files_children_by_container test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for files_children_by_pool
  # Lists files under a specific folder.
  # **API Key Scope**: files / index
  # @param pool_id Numeric ID, or name of pool.
  # @param file_parent_id Numeric ID of parent folder.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The number of items to display for pagination.
  # @option opts [Integer] :offset The number of items to skip for pagination.
  # @option opts [String] :file_id Filter on file id
  # @option opts [String] :name Filter on name
  # @option opts [String] :type Filter on type
  # @option opts [String] :permission Filter on permission
  # @option opts [String] :size Filter on size
  # @option opts [String] :change_date Filter on change date
  # @option opts [String] :modification_date Filter on modification date
  # @option opts [String] :access_date Filter on access date
  # @option opts [String] :gid Filter on gid
  # @option opts [String] :uid Filter on uid
  # @return [NodeumFileCollection]
  describe 'files_children_by_pool test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for files_children_by_task
  # Lists files under a specific folder.
  # **API Key Scope**: files / index
  # @param task_id Numeric ID or name of task. Task names are not unique, it&#39;s recommanded to use numeric ID.
  # @param file_parent_id Numeric ID of parent folder.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The number of items to display for pagination.
  # @option opts [Integer] :offset The number of items to skip for pagination.
  # @option opts [String] :file_id Filter on file id
  # @option opts [String] :name Filter on name
  # @option opts [String] :type Filter on type
  # @option opts [String] :permission Filter on permission
  # @option opts [String] :size Filter on size
  # @option opts [String] :change_date Filter on change date
  # @option opts [String] :modification_date Filter on modification date
  # @option opts [String] :access_date Filter on access date
  # @option opts [String] :gid Filter on gid
  # @option opts [String] :uid Filter on uid
  # @return [NodeumFileCollection]
  describe 'files_children_by_task test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for files_children_by_task_execution
  # Lists files under a specific folder.
  # **API Key Scope**: files / index
  # @param task_execution_id Numeric ID of task execution.
  # @param file_parent_id Numeric ID of parent folder.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The number of items to display for pagination.
  # @option opts [Integer] :offset The number of items to skip for pagination.
  # @option opts [String] :file_id Filter on file id
  # @option opts [String] :name Filter on name
  # @option opts [String] :type Filter on type
  # @option opts [String] :permission Filter on permission
  # @option opts [String] :size Filter on size
  # @option opts [String] :change_date Filter on change date
  # @option opts [String] :modification_date Filter on modification date
  # @option opts [String] :access_date Filter on access date
  # @option opts [String] :gid Filter on gid
  # @option opts [String] :uid Filter on uid
  # @return [NodeumFileCollection]
  describe 'files_children_by_task_execution test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for files_children_by_task_execution_by_task
  # Lists files under a specific folder.
  # **API Key Scope**: files / index
  # @param task_id Numeric ID or name of task. Task names are not unique, it&#39;s recommanded to use numeric ID.
  # @param task_execution_id Numeric ID of task execution.
  # @param file_parent_id Numeric ID of parent folder.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The number of items to display for pagination.
  # @option opts [Integer] :offset The number of items to skip for pagination.
  # @option opts [String] :file_id Filter on file id
  # @option opts [String] :name Filter on name
  # @option opts [String] :type Filter on type
  # @option opts [String] :permission Filter on permission
  # @option opts [String] :size Filter on size
  # @option opts [String] :change_date Filter on change date
  # @option opts [String] :modification_date Filter on modification date
  # @option opts [String] :access_date Filter on access date
  # @option opts [String] :gid Filter on gid
  # @option opts [String] :uid Filter on uid
  # @return [NodeumFileCollection]
  describe 'files_children_by_task_execution_by_task test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for import_files_children_by_pool
  # Lists files under a specific folder on tape of pools, specific for Data Exchange.
  # **API Key Scope**: import_files / index
  # @param pool_id Numeric ID, or name of pool.
  # @param file_parent_id Numeric ID of parent folder.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The number of items to display for pagination.
  # @option opts [Integer] :offset The number of items to skip for pagination.
  # @option opts [String] :file_id Filter on file id
  # @option opts [String] :name Filter on name
  # @option opts [String] :type Filter on type
  # @option opts [String] :permission Filter on permission
  # @option opts [String] :size Filter on size
  # @option opts [String] :change_date Filter on change date
  # @option opts [String] :modification_date Filter on modification date
  # @option opts [String] :access_date Filter on access date
  # @option opts [String] :gid Filter on gid
  # @option opts [String] :uid Filter on uid
  # @return [ImportFileCollection]
  describe 'import_files_children_by_pool test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for index_files
  # Lists files on root.
  # **API Key Scope**: files / index
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The number of items to display for pagination.
  # @option opts [Integer] :offset The number of items to skip for pagination.
  # @option opts [String] :file_id Filter on file id
  # @option opts [String] :name Filter on name
  # @option opts [String] :type Filter on type
  # @option opts [String] :permission Filter on permission
  # @option opts [String] :size Filter on size
  # @option opts [String] :change_date Filter on change date
  # @option opts [String] :modification_date Filter on modification date
  # @option opts [String] :access_date Filter on access date
  # @option opts [String] :gid Filter on gid
  # @option opts [String] :uid Filter on uid
  # @return [NodeumFileCollection]
  describe 'index_files test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for index_files_by_container
  # Lists files on root.
  # **API Key Scope**: files / index
  # @param container_id Numeric ID or name of container.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The number of items to display for pagination.
  # @option opts [Integer] :offset The number of items to skip for pagination.
  # @option opts [String] :file_id Filter on file id
  # @option opts [String] :name Filter on name
  # @option opts [String] :type Filter on type
  # @option opts [String] :permission Filter on permission
  # @option opts [String] :size Filter on size
  # @option opts [String] :change_date Filter on change date
  # @option opts [String] :modification_date Filter on modification date
  # @option opts [String] :access_date Filter on access date
  # @option opts [String] :gid Filter on gid
  # @option opts [String] :uid Filter on uid
  # @return [NodeumFileCollection]
  describe 'index_files_by_container test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for index_files_by_pool
  # Lists files on root.
  # **API Key Scope**: files / index
  # @param pool_id Numeric ID, or name of pool.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The number of items to display for pagination.
  # @option opts [Integer] :offset The number of items to skip for pagination.
  # @option opts [String] :file_id Filter on file id
  # @option opts [String] :name Filter on name
  # @option opts [String] :type Filter on type
  # @option opts [String] :permission Filter on permission
  # @option opts [String] :size Filter on size
  # @option opts [String] :change_date Filter on change date
  # @option opts [String] :modification_date Filter on modification date
  # @option opts [String] :access_date Filter on access date
  # @option opts [String] :gid Filter on gid
  # @option opts [String] :uid Filter on uid
  # @return [NodeumFileCollection]
  describe 'index_files_by_pool test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for index_files_by_task
  # Lists files on root.
  # **API Key Scope**: files / index
  # @param task_id Numeric ID or name of task. Task names are not unique, it&#39;s recommanded to use numeric ID.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The number of items to display for pagination.
  # @option opts [Integer] :offset The number of items to skip for pagination.
  # @option opts [String] :file_id Filter on file id
  # @option opts [String] :name Filter on name
  # @option opts [String] :type Filter on type
  # @option opts [String] :permission Filter on permission
  # @option opts [String] :size Filter on size
  # @option opts [String] :change_date Filter on change date
  # @option opts [String] :modification_date Filter on modification date
  # @option opts [String] :access_date Filter on access date
  # @option opts [String] :gid Filter on gid
  # @option opts [String] :uid Filter on uid
  # @return [NodeumFileCollection]
  describe 'index_files_by_task test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for index_files_by_task_execution
  # Lists files on root.
  # **API Key Scope**: files / index
  # @param task_execution_id Numeric ID of task execution.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The number of items to display for pagination.
  # @option opts [Integer] :offset The number of items to skip for pagination.
  # @option opts [String] :file_id Filter on file id
  # @option opts [String] :name Filter on name
  # @option opts [String] :type Filter on type
  # @option opts [String] :permission Filter on permission
  # @option opts [String] :size Filter on size
  # @option opts [String] :change_date Filter on change date
  # @option opts [String] :modification_date Filter on modification date
  # @option opts [String] :access_date Filter on access date
  # @option opts [String] :gid Filter on gid
  # @option opts [String] :uid Filter on uid
  # @return [NodeumFileCollection]
  describe 'index_files_by_task_execution test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for index_files_by_task_execution_by_task
  # Lists files on root.
  # **API Key Scope**: files / index
  # @param task_id Numeric ID or name of task. Task names are not unique, it&#39;s recommanded to use numeric ID.
  # @param task_execution_id Numeric ID of task execution.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The number of items to display for pagination.
  # @option opts [Integer] :offset The number of items to skip for pagination.
  # @option opts [String] :file_id Filter on file id
  # @option opts [String] :name Filter on name
  # @option opts [String] :type Filter on type
  # @option opts [String] :permission Filter on permission
  # @option opts [String] :size Filter on size
  # @option opts [String] :change_date Filter on change date
  # @option opts [String] :modification_date Filter on modification date
  # @option opts [String] :access_date Filter on access date
  # @option opts [String] :gid Filter on gid
  # @option opts [String] :uid Filter on uid
  # @return [NodeumFileCollection]
  describe 'index_files_by_task_execution_by_task test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for index_import_files_by_pool
  # Lists files on root of tape of pools, specific for Data Exchange.
  # **API Key Scope**: import_files / index
  # @param pool_id Numeric ID, or name of pool.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The number of items to display for pagination.
  # @option opts [Integer] :offset The number of items to skip for pagination.
  # @option opts [String] :file_id Filter on file id
  # @option opts [String] :name Filter on name
  # @option opts [String] :type Filter on type
  # @option opts [String] :permission Filter on permission
  # @option opts [String] :size Filter on size
  # @option opts [String] :change_date Filter on change date
  # @option opts [String] :modification_date Filter on modification date
  # @option opts [String] :access_date Filter on access date
  # @option opts [String] :gid Filter on gid
  # @option opts [String] :uid Filter on uid
  # @return [ImportFileCollection]
  describe 'index_import_files_by_pool test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for index_on_tapes_files_by_pool
  # Lists files on root of tape of pools, specific for Active and Offline.
  # **API Key Scope**: on_tapes_files / index
  # @param pool_id Numeric ID, or name of pool.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The number of items to display for pagination.
  # @option opts [Integer] :offset The number of items to skip for pagination.
  # @option opts [String] :name Filter on name
  # @option opts [String] :type Filter on type
  # @option opts [String] :size Filter on size
  # @return [OnTapesFileCollection]
  describe 'index_on_tapes_files_by_pool test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for index_tapes_by_file_by_pool
  # Displays tapes containing specific file, related to the specific pool.
  # **API Key Scope**: files / tapes
  # @param pool_id Numeric ID, or name of pool.
  # @param file_id Numeric ID of file.
  # @param [Hash] opts the optional parameters
  # @return [TapeCollection]
  describe 'index_tapes_by_file_by_pool test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for index_tapes_by_file_by_task
  # Displays tapes containing specific file, related to the specific task.
  # **API Key Scope**: files / tapes
  # @param task_id Numeric ID or name of task. Task names are not unique, it&#39;s recommanded to use numeric ID.
  # @param file_id Numeric ID of file.
  # @param [Hash] opts the optional parameters
  # @return [TapeCollection]
  describe 'index_tapes_by_file_by_task test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for index_tapes_by_file_by_task_execution
  # Displays tapes containing specific file, related to the specific task.
  # **API Key Scope**: files / tapes
  # @param task_execution_id Numeric ID of task execution.
  # @param file_id Numeric ID of file.
  # @param [Hash] opts the optional parameters
  # @return [TapeCollection]
  describe 'index_tapes_by_file_by_task_execution test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for index_tapes_by_file_by_task_execution_by_task
  # Displays tapes containing specific file, related to the specific task.
  # **API Key Scope**: files / tapes
  # @param task_id Numeric ID or name of task. Task names are not unique, it&#39;s recommanded to use numeric ID.
  # @param task_execution_id Numeric ID of task execution.
  # @param file_id Numeric ID of file.
  # @param [Hash] opts the optional parameters
  # @return [TapeCollection]
  describe 'index_tapes_by_file_by_task_execution_by_task test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for on_tapes_files_children_by_pool
  # Lists files under a specific folder on tape of pools, specific for Active and Offline.
  # **API Key Scope**: on_tapes_files / index
  # @param pool_id Numeric ID, or name of pool.
  # @param file_parent_id Numeric ID of parent folder.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The number of items to display for pagination.
  # @option opts [Integer] :offset The number of items to skip for pagination.
  # @option opts [String] :name Filter on name
  # @option opts [String] :type Filter on type
  # @option opts [String] :size Filter on size
  # @return [OnTapesFileCollection]
  describe 'on_tapes_files_children_by_pool test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for show_file
  # Displays a specific file.
  # **API Key Scope**: files / show
  # @param file_id Numeric ID of file.
  # @param [Hash] opts the optional parameters
  # @return [NodeumFileWithPath]
  describe 'show_file test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for show_file_by_container
  # Displays a specific file.
  # **API Key Scope**: files / show
  # @param container_id Numeric ID or name of container.
  # @param file_id Numeric ID of file.
  # @param [Hash] opts the optional parameters
  # @return [NodeumFileWithPath]
  describe 'show_file_by_container test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for show_file_by_pool
  # Displays a specific file.
  # **API Key Scope**: files / show
  # @param pool_id Numeric ID, or name of pool.
  # @param file_id Numeric ID of file.
  # @param [Hash] opts the optional parameters
  # @return [NodeumFileWithPath]
  describe 'show_file_by_pool test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for show_file_by_task
  # Displays a specific file.
  # **API Key Scope**: files / show
  # @param task_id Numeric ID or name of task. Task names are not unique, it&#39;s recommanded to use numeric ID.
  # @param file_id Numeric ID of file.
  # @param [Hash] opts the optional parameters
  # @return [NodeumFileWithPath]
  describe 'show_file_by_task test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for show_file_by_task_execution
  # Displays a specific file.
  # **API Key Scope**: files / show
  # @param task_execution_id Numeric ID of task execution.
  # @param file_id Numeric ID of file.
  # @param [Hash] opts the optional parameters
  # @return [NodeumFileWithPath]
  describe 'show_file_by_task_execution test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for show_file_by_task_execution_by_task
  # Displays a specific file.
  # **API Key Scope**: files / show
  # @param task_id Numeric ID or name of task. Task names are not unique, it&#39;s recommanded to use numeric ID.
  # @param task_execution_id Numeric ID of task execution.
  # @param file_id Numeric ID of file.
  # @param [Hash] opts the optional parameters
  # @return [NodeumFileWithPath]
  describe 'show_file_by_task_execution_by_task test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for show_import_file_by_pool
  # Displays a specific file on tape of pools, specific for Data Exchange.
  # **API Key Scope**: import_files / show
  # @param pool_id Numeric ID, or name of pool.
  # @param file_id Numeric ID of file.
  # @param [Hash] opts the optional parameters
  # @return [ImportFileWithPath]
  describe 'show_import_file_by_pool test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for show_on_tape_file_by_pool
  # Displays a specific file on tape of pools, specific for Active and Offline.
  # **API Key Scope**: on_tapes_files / show
  # @param pool_id Numeric ID, or name of pool.
  # @param file_id Numeric ID of file.
  # @param [Hash] opts the optional parameters
  # @return [OnTapesFile]
  describe 'show_on_tape_file_by_pool test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
