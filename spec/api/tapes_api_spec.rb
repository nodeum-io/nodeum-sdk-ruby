=begin
#Nodeum API

## About  This document describes the Nodeum API version 2:  If you are looking for any information about the product itself, reach the product website https://www.nodeum.io. You can also contact us at this email address : info@nodeum.io  # Filter parameters When browsing a list of items, multiple filter parameters may be applied. Some operators can be added to the value as a prefix:  - `=` value is equal. Default operator, may be omitted  - `!=` value is different  - `>` greater than  - `>=` greater than or equal  - `<` lower than  - `>=` lower than or equal  - `><` included in list, items should be separated by `|`  - `!><` not included in list, items should be separated by `|`  - `~` pattern matching, may include `%` (any characters) and `_` (one character)  - `!~` pattern not matching, may include `%` (any characters) and `_` (one character)  

The version of the OpenAPI document: 2.1.0

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 4.3.0

=end

require 'spec_helper'
require 'json'

# Unit tests for Nodeum::TapesApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'TapesApi' do
  before do
    # run before each test
    @api_instance = Nodeum::TapesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of TapesApi' do
    it 'should create an instance of TapesApi' do
      expect(@api_instance).to be_instance_of(Nodeum::TapesApi)
    end
  end

  # unit tests for index_tape_stats
  # List all tape statistics.
  # **API Key Scope**: tape_stats / index
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The number of items to display for pagination.
  # @option opts [Integer] :offset The number of items to skip for pagination.
  # @return [TapeStatCollection]
  describe 'index_tape_stats test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for index_tapes
  # Lists all tapes.
  # **API Key Scope**: tapes / index
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The number of items to display for pagination.
  # @option opts [Integer] :offset The number of items to skip for pagination.
  # @option opts [Array<String>] :sort_by Sort results by attribute.  Can sort on multiple attributes, separated by &#x60;|&#x60;. Order direction can be suffixing the attribute by either &#x60;:asc&#x60; (default) or &#x60;:desc&#x60;.
  # @option opts [String] :id Filter on id
  # @option opts [String] :tape_library_id Filter on tape library id
  # @option opts [String] :pool_id Filter on a pool id
  # @option opts [String] :barcode Filter on barcode
  # @option opts [String] :location Filter on location
  # @option opts [String] :type Filter on type
  # @option opts [String] :locked Filter on locked
  # @option opts [String] :scratch Filter on scratch
  # @option opts [String] :cleaning Filter on cleaning
  # @option opts [String] :write_protect Filter on write protect
  # @option opts [String] :mounted Filter on mounted
  # @option opts [String] :ejected Filter on ejected
  # @option opts [String] :known Filter on known
  # @option opts [String] :mount_count Filter on mount count
  # @option opts [String] :date_in Filter on date in
  # @option opts [String] :date_move Filter on date move
  # @option opts [String] :free Filter on free
  # @option opts [String] :max Filter on max
  # @option opts [String] :last_size_update Filter on last size update
  # @option opts [String] :last_maintenance Filter on last maintenance
  # @option opts [String] :last_repack Filter on last repack
  # @option opts [String] :repack_status Filter on repack status
  # @option opts [String] :hash Filter on hash
  # @option opts [String] :force_import_type Filter on force import type
  # @option opts [String] :need_to_check Filter on need to check
  # @return [TapeCollection]
  describe 'index_tapes test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for index_tapes_by_pool
  # Lists all tapes.
  # **API Key Scope**: tapes / index
  # @param pool_id Numeric ID, or name of pool.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The number of items to display for pagination.
  # @option opts [Integer] :offset The number of items to skip for pagination.
  # @option opts [Array<String>] :sort_by Sort results by attribute.  Can sort on multiple attributes, separated by &#x60;|&#x60;. Order direction can be suffixing the attribute by either &#x60;:asc&#x60; (default) or &#x60;:desc&#x60;.
  # @option opts [String] :id Filter on id
  # @option opts [String] :tape_library_id Filter on tape library id
  # @option opts [String] :barcode Filter on barcode
  # @option opts [String] :location Filter on location
  # @option opts [String] :type Filter on type
  # @option opts [String] :locked Filter on locked
  # @option opts [String] :scratch Filter on scratch
  # @option opts [String] :cleaning Filter on cleaning
  # @option opts [String] :write_protect Filter on write protect
  # @option opts [String] :mounted Filter on mounted
  # @option opts [String] :ejected Filter on ejected
  # @option opts [String] :known Filter on known
  # @option opts [String] :mount_count Filter on mount count
  # @option opts [String] :date_in Filter on date in
  # @option opts [String] :date_move Filter on date move
  # @option opts [String] :free Filter on free
  # @option opts [String] :max Filter on max
  # @option opts [String] :last_size_update Filter on last size update
  # @option opts [String] :last_maintenance Filter on last maintenance
  # @option opts [String] :last_repack Filter on last repack
  # @option opts [String] :repack_status Filter on repack status
  # @option opts [String] :hash Filter on hash
  # @option opts [String] :force_import_type Filter on force import type
  # @option opts [String] :need_to_check Filter on need to check
  # @return [TapeCollection]
  describe 'index_tapes_by_pool test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for index_tapes_by_tape_library
  # Lists all tapes.
  # **API Key Scope**: tapes / index
  # @param tape_library_id Numeric ID, serial, or name of tape library.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The number of items to display for pagination.
  # @option opts [Integer] :offset The number of items to skip for pagination.
  # @option opts [Array<String>] :sort_by Sort results by attribute.  Can sort on multiple attributes, separated by &#x60;|&#x60;. Order direction can be suffixing the attribute by either &#x60;:asc&#x60; (default) or &#x60;:desc&#x60;.
  # @option opts [String] :id Filter on id
  # @option opts [String] :pool_id Filter on a pool id
  # @option opts [String] :barcode Filter on barcode
  # @option opts [String] :location Filter on location
  # @option opts [String] :type Filter on type
  # @option opts [String] :locked Filter on locked
  # @option opts [String] :scratch Filter on scratch
  # @option opts [String] :cleaning Filter on cleaning
  # @option opts [String] :write_protect Filter on write protect
  # @option opts [String] :mounted Filter on mounted
  # @option opts [String] :ejected Filter on ejected
  # @option opts [String] :known Filter on known
  # @option opts [String] :mount_count Filter on mount count
  # @option opts [String] :date_in Filter on date in
  # @option opts [String] :date_move Filter on date move
  # @option opts [String] :free Filter on free
  # @option opts [String] :max Filter on max
  # @option opts [String] :last_size_update Filter on last size update
  # @option opts [String] :last_maintenance Filter on last maintenance
  # @option opts [String] :last_repack Filter on last repack
  # @option opts [String] :repack_status Filter on repack status
  # @option opts [String] :hash Filter on hash
  # @option opts [String] :force_import_type Filter on force import type
  # @option opts [String] :need_to_check Filter on need to check
  # @return [TapeCollection]
  describe 'index_tapes_by_tape_library test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for mount_status_tape
  # Get mount status of Tape.
  # **API Key Scope**: tapes / mount_status
  # @param tape_id Numeric ID, or barcode of tape.
  # @param [Hash] opts the optional parameters
  # @return [MountStatus]
  describe 'mount_status_tape test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for mount_status_tape_by_pool
  # Get mount status of Tape.
  # **API Key Scope**: tapes / mount_status
  # @param pool_id Numeric ID, or name of pool.
  # @param tape_id Numeric ID, or barcode of tape.
  # @param [Hash] opts the optional parameters
  # @return [MountStatus]
  describe 'mount_status_tape_by_pool test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for mount_status_tape_by_tape_library
  # Get mount status of Tape.
  # **API Key Scope**: tapes / mount_status
  # @param tape_library_id Numeric ID, serial, or name of tape library.
  # @param tape_id Numeric ID, or barcode of tape.
  # @param [Hash] opts the optional parameters
  # @return [MountStatus]
  describe 'mount_status_tape_by_tape_library test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for show_tape
  # Displays a specific tape.
  # **API Key Scope**: tapes / show
  # @param tape_id Numeric ID, or barcode of tape.
  # @param [Hash] opts the optional parameters
  # @return [Tape]
  describe 'show_tape test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for show_tape_by_pool
  # Displays a specific tape.
  # **API Key Scope**: tapes / show
  # @param pool_id Numeric ID, or name of pool.
  # @param tape_id Numeric ID, or barcode of tape.
  # @param [Hash] opts the optional parameters
  # @return [Tape]
  describe 'show_tape_by_pool test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for show_tape_by_tape_library
  # Displays a specific tape.
  # **API Key Scope**: tapes / show
  # @param tape_library_id Numeric ID, serial, or name of tape library.
  # @param tape_id Numeric ID, or barcode of tape.
  # @param [Hash] opts the optional parameters
  # @return [Tape]
  describe 'show_tape_by_tape_library test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for show_tape_stat
  # Display statistic for a specific tape.
  # **API Key Scope**: tape_stats / show
  # @param tape_id Numeric ID, or barcode of tape.
  # @param [Hash] opts the optional parameters
  # @return [TapeStat]
  describe 'show_tape_stat test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for show_tape_stat_by_pool
  # Display statistic for a specific tape.
  # **API Key Scope**: tape_stats / show
  # @param pool_id Numeric ID, or name of pool.
  # @param tape_id Numeric ID, or barcode of tape.
  # @param [Hash] opts the optional parameters
  # @return [TapeStat]
  describe 'show_tape_stat_by_pool test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for show_tape_stat_by_tape_library
  # Display statistic for a specific tape.
  # **API Key Scope**: tape_stats / show
  # @param tape_library_id Numeric ID, serial, or name of tape library.
  # @param tape_id Numeric ID, or barcode of tape.
  # @param [Hash] opts the optional parameters
  # @return [TapeStat]
  describe 'show_tape_stat_by_tape_library test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
